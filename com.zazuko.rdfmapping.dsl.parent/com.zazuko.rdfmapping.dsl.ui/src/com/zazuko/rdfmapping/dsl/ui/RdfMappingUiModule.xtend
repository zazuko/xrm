/*
 * generated by Xtext 2.18.0
 */
package com.zazuko.rdfmapping.dsl.ui

import com.google.inject.Binder
import com.zazuko.rdfmapping.dsl.rdfMapping.RdfMappingFactory
import com.zazuko.rdfmapping.dsl.ui.contentassist.RdfMappingPrefixMatcher
import com.zazuko.rdfmapping.dsl.ui.contentassist.RealRdfMappingProposalProvider
import com.zazuko.rdfmapping.dsl.ui.labeling.RdfHoverDocumentationProvider
import com.zazuko.rdfmapping.dsl.ui.labeling.RdfMappingLabelProvider
import com.zazuko.rdfmapping.dsl.ui.outline.RdfMappingOutlineTreeProvider
import com.zazuko.rdfmapping.dsl.ui.quickfix.RealRdfMappingQuickfixProvider
import org.eclipse.jface.viewers.LabelProvider
import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor
import org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider
import org.eclipse.xtext.ui.editor.contentassist.PrefixMatcher
import org.eclipse.xtext.ui.editor.hover.html.IEObjectHoverDocumentationProvider
import org.eclipse.xtext.ui.editor.outline.IOutlineTreeProvider
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionProvider

/**
 * Use this class to register components to be used within the Eclipse IDE.
 */
@FinalFieldsConstructor
class RdfMappingUiModule extends AbstractRdfMappingUiModule {
	override Class<? extends IOutlineTreeProvider> bindIOutlineTreeProvider() {
		return RdfMappingOutlineTreeProvider;
	}

	def Class<? extends LabelProvider> bindLabelProvider() {
		return RdfMappingLabelProvider;
	}

	override Class<? extends IContentProposalProvider> bindIContentProposalProvider() {
		return RealRdfMappingProposalProvider;
	}

	override Class<? extends PrefixMatcher> bindPrefixMatcher() {
		return RdfMappingPrefixMatcher;
	}

	override Class<? extends IssueResolutionProvider> bindIssueResolutionProvider() {
		return RealRdfMappingQuickfixProvider;
	}

	// do pure Guice here...
	override configure(Binder it) {
		super.configure(it);
		bind(RdfMappingFactory).toInstance(RdfMappingFactory.eINSTANCE);
		bind(IEObjectHoverDocumentationProvider).to(RdfHoverDocumentationProvider);
	}

}
