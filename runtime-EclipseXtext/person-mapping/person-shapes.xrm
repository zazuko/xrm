// TODO base "https://schema.example.org/"

// this sample is inspired by https://w3c.github.io/shacl/shacl-compact-syntax/#example

node-shape PersonNodeShape {
	deactivated
 
	target-classes
		ex.Person
		
	closed
		
	ignored-properties
		rdf.^type
	
	properties
		ex.ssn node-kind Literal [0..1] {
			datatype xsd.string
			pattern "^\\d{3}-\\d{2}-\\d{4}$"
		}
		// sh:NodeKind: sh:BlankNode, sh:IRI, sh:Literal sh:BlankNodeOrIRI, sh:BlankNodeOrLiteral and sh:IRIOrLiteral. A shape has at most one value for sh:nodeKind.
		
		ex.worksFor node-kind IRI [0..*] {
			classes ex.Company
			pattern "^https://data.example.org/"
		}
	
		ex.address node-kind BlankNode [0..1] {
			node-shapes AddressNodeShape
		}
	
		ex.hasAnything node-kind Any [0..*] {
			classes ex.Company
			datatype xsd.string
			node-shapes EmptyNodeShape
			pattern "^https://data.example.org/"
		}
		
		// alternatively to embedded property shapes, also support using externalized property shapes
		AddressPropertyShape
}

node-shape AddressNodeShape {
	properties
		ex.city node-kind Literal [1..1] {
			datatype xsd.string
		}

		ex.postalCode node-kind Literal [1..1] {
			datatype xsd.string
		}
}

node-shape EmptyNodeShape {
}

property-shape AddressPropertyShape {
//property-shape AddressPropertyShape node-kind BlankNode [0..1] {
	deactivated

	path ex.address

	node-shapes AddressNodeShape	
}