// TODO uncomment next line --> warning on 'map' + quickfix
output rml

template airportIri "http://airport.example.com/{0}"
template exampleIri "http://example.com/"
// TODO uncomment next line --> error for duplicated template name
//template exampleIri "http://example.com/"

map EmployeeMapping from EMPLOYEE {
	// TODO code complete on airportIri - get proposals of templates declared within this file
	subject template airportIri with id;

	types
		employee.Employee

	properties
		// TODO code completion before the next line - get references like 'thing.size' offered
		// TODO code completion on the next line between 'employee.no' and 'from' - keywords will be offered (no references to RdfProperties)
		employee.no from EMPNO;
		// TODO (reloaded) code completion before the next line - get references like 'thing.size' offered
		// TODO uncomment next line (error is fine), code completion at end of line offers keywords
		// thing.size 
		thing.color parent-map EmployeeMapping2; // ok for rml, r2rml
		// TODO 'as' must be offered by code completion (this is r2rml)
		keyword.^map template "{0}" with EMPNO as Literal; // ok for rml, r2rml 
		// TODO uncomment next line --> error
		// TODO code completion: no suggestion 'multi-reference'
		// keyword.^map multi-reference from EMPNO ;
}

map EmployeeMapping2 from EMPLOYEE {
	subject template "http://airport.example.com/{0}" with id;

	types
		employee.Employee

	properties
		employee.no from EMPNO;
		thing.color template airportIri with id;
		thing.color template "http://manualstuff.com/colors/{0}" with id;
		
}

logical-source EMPLOYEE {
	type xml
	source "EMP"
	// TODO uncomment next line --> error because of sourceType==xml
	// dialect MyDialect
	iterator "/Employees/Employee"

	referenceables
		id
		EMPNO
// TODO uncomment next line. error: null "X" is only supported on type csv
// ENAME null "X"	
}

vocabulary employee {
	prefix "employee:" "http://example.com/employee"

	classes
		Employee

	properties
		no
		yes
}

